// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

//generator dataSeedGenerator {
//  provider = "ts-node ./prisma/configSeedingGenerator/generator.ts"
//}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int             @id @default(autoincrement())
  employeeId         String          @unique @db.VarChar(255)
  hashedPassword     String          @db.VarChar(255)
  firstName          String?         @db.VarChar(255)
  lastName           String?         @db.VarChar(255)
  email              String?         @db.VarChar(255)
  phone1             String?         @db.VarChar(255)
  phone2             String?         @db.VarChar(255)
  title              String?         @db.VarChar(255)
  roleId             Int?
  role               Role?           @relation("userRole", fields: [roleId], references: [id])
  isActiveUser       Boolean         @default(true)
  address1           String?         @db.VarChar(255)
  address2           String?         @db.VarChar(255)
  cityId             Int?
  city               CityMaster?     @relation("userCity", fields: [cityId], references: [id])
  districtId         Int?
  district           DistrictMaster? @relation("userDistrict", fields: [districtId], references: [id])
  stateId            Int?
  state              StateMaster?    @relation("userState", fields: [stateId], references: [id])
  createdOn          DateTime        @default(now())
  depsLoadingUserIds DEPS[]          @relation("depsLoadingUserId")
}

model Role {
  id                   Int                   @id @default(autoincrement())
  name                 String
  users                User[]                @relation("userRole")
  CRMObjectPermissions CRMObjectPermission[] @relation("CRMObjectPermissionRole")
  CRMFieldPermissions  CRMFieldPermission[]  @relation("CRMFieldPermissionRole")
}

enum CRMFieldSortOrder {
  asc
  desc
}

model CRMObject {
  id                   Int                   @id @default(autoincrement())
  name                 String                @unique
  viewName             String?
  viewIndex            Int?
  primaryFieldName     String?
  labelFieldName       String?
  CRMObjectGroupId     Int
  sortFieldId          Int?                  @unique
  sortField            CRMField?             @relation("sortField", fields: [sortFieldId], references: [id])
  sortOrder            CRMFieldSortOrder     @default(desc)
  CRMFields            CRMField[]            @relation("CRMFieldTable")
  CRMObjectGroup       CRMObjectGroup        @relation("CRMObjectGroupCRMObject", fields: [CRMObjectGroupId], references: [id])
  CRMObjectRelations   CRMObjectRelations[]  @relation("PrimaryObject")
  CRMObjectRelated     CRMObjectRelations[]  @relation("RelatedObject")
  CRMObjectPermissions CRMObjectPermission[] @relation("CRMObjectPermissionCRMObject")
  relatedFields        CRMField[]            @relation("RelatedObject")
}

enum CRMFieldType {
  calculated
  comboBox
  currency
  email
  encryptedString
  id
  multiPicklist
  percent
  phone
  picklist
  relation
  textArea
  url
}

model CRMField {
  id                  Int                  @id @default(autoincrement())
  name                String
  viewName            String?
  viewIndex           Int?
  isRelation          Boolean              @default(false)
  idFieldName         String?
  fieldType           CRMFieldType?
  isInSearchModal     Boolean              @default(false)
  isRequired          Boolean              @default(false)
  isInCreateView      Boolean              @default(false)
  isInListView        Boolean              @default(false)
  isInEditView        Boolean              @default(false)
  isInDetailView      Boolean              @default(false)
  isInRelatedList     Boolean              @default(false)
  isSearchableField   Boolean              @default(false)
  filterView          Boolean              @default(false)
  CRMObjectId         Int
  relatedObjectId     Int?
  CRMObject           CRMObject            @relation("CRMFieldTable", fields: [CRMObjectId], references: [id])
  CRMFieldPermissions CRMFieldPermission[] @relation("CRMFieldPermissionCRMField")
  CRMObjectSort       CRMObject?           @relation("sortField")
  relatedObject       CRMObject?           @relation("RelatedObject", fields: [relatedObjectId], references: [id])
}

model CRMObjectGroup {
  id         Int         @id @default(autoincrement())
  viewName   String
  viewIndex  Int
  CRMObjects CRMObject[] @relation("CRMObjectGroupCRMObject")
}

model CRMObjectRelations {
  id                  Int       @id @default(autoincrement())
  primaryObjectId     Int
  relatedObjectId     Int
  viewIndex           Int?
  isInRelatedListView Boolean   @default(false)
  PrimaryObject       CRMObject @relation("PrimaryObject", fields: [primaryObjectId], references: [id])
  RelatedObject       CRMObject @relation("RelatedObject", fields: [relatedObjectId], references: [id])
}

model CRMObjectPermission {
  id          Int       @id @default(autoincrement())
  roleId      Int
  CRMObjectId Int
  can_read    Boolean   @default(false)
  can_edit    Boolean   @default(false)
  can_add     Boolean   @default(false)
  can_delete  Boolean   @default(false)
  role        Role      @relation("CRMObjectPermissionRole", fields: [roleId], references: [id])
  CRMObject   CRMObject @relation("CRMObjectPermissionCRMObject", fields: [CRMObjectId], references: [id])
}

model CRMFieldPermission {
  id         Int      @id @default(autoincrement())
  roleId     Int
  CRMFieldId Int
  can_read   Boolean  @default(false)
  can_edit   Boolean  @default(false)
  role       Role     @relation("CRMFieldPermissionRole", fields: [roleId], references: [id])
  CRMField   CRMField @relation("CRMFieldPermissionCRMField", fields: [CRMFieldId], references: [id])
}

model Branch {
  id                       Int                  @id @default(autoincrement())
  branchCode               String               @unique @db.VarChar(255)
  branchName               String               @db.VarChar(255)
  address1                 String?              @db.VarChar(255)
  address2                 String?              @db.VarChar(255)
  cityId                   Int?
  city                     CityMaster?          @relation("branchCity", fields: [cityId], references: [id])
  districtId               Int?
  district                 DistrictMaster?      @relation("branchDistrict", fields: [districtId], references: [id])
  stateId                  Int?
  state                    StateMaster?         @relation("branchState", fields: [stateId], references: [id])
  phone1                   String?              @db.VarChar(255)
  phone2                   String?              @db.VarChar(255)
  isHub                    Boolean?             @default(false)
  isConsignorPickupPoint   Boolean?
  isActive                 Boolean?             @default(false)
  createdOn                DateTime             @default(now())
  consignors               Consignor[]          @relation("consignorBranch")
  consignees               Consignee[]          @relation("consigneeBranch")
  AWBfromBranches          AirWayBill[]         @relation("AWBFromBranch")
  AWBtoBranches            AirWayBill[]         @relation("AWBToBranch")
  consignorRateBranches    ConsignorRateTable[] @relation("consignorRateBranch")
  tripBranchIds            TripDetails[]        @relation("tripBranchId")
  tripCheckinBranchIds     TripCheckIn[]        @relation("tripCheckinBranchId")
  nextBranchTripLineItems  TripLineItem[]       @relation("nextBranchTripLineItem")
  finalBranchTripLineItems TripLineItem[]       @relation("finalBranchTripLineItem")
  hlfLineBranchIds         HLFLineItem[]        @relation("hlfLineBranchId")
  tripLatestCheckinHubs    TripDetails[]        @relation("tripLatestCheckinHub")
  consignorwareHouseIds    Consignor[]          @relation("consignorwareHouseId")
  loadLocationCodes        TripLineItem[]       @relation("loadLocationCode")
  depsLoadingHubIds        DEPS[]               @relation("depsLoadingHubId")
}

model Consignor {
  consignorId               Int                  @id @default(autoincrement())
  consignorCode             String?              @db.VarChar(255)
  publicName                String               @db.VarChar(255)
  legalName                 String               @db.VarChar(255)
  industryTypeId            Int?
  industryType              IndustryTypeMaster?  @relation("consignorIndustryType", fields: [industryTypeId], references: [id])
  commodityId               Int?
  commodity                 CommodityMaster?     @relation("ConsignoreCommodity", fields: [commodityId], references: [id])
  address1                  String?              @db.VarChar(255)
  address2                  String?              @db.VarChar(255)
  cityId                    Int?
  city                      CityMaster?          @relation("consignorCity", fields: [cityId], references: [id])
  districtId                Int?
  disstrict                 DistrictMaster?      @relation("consignorDistrict", fields: [districtId], references: [id])
  stateId                   Int?
  state                     StateMaster?         @relation("consignorState", fields: [stateId], references: [id])
  gstNumber                 String?              @db.VarChar(255)
  panNumber                 String?              @db.VarChar(255)
  tanNumber                 String?              @db.VarChar(255)
  cinNumber                 String?              @db.VarChar(255)
  gstId                     Int?
  gst                       GstMaster?           @relation("ConsignorGstId", fields: [gstId], references: [id])
  gstExemptFileId           Int?
  FileUpload                FileUpload?          @relation("consignorGstFile", fields: [gstExemptFileId], references: [id])
  taxCategory               String?              @db.VarChar(255)
  parentConsignorId         Int?
  parentConsignor           Consignor?           @relation("parentConsignor", fields: [parentConsignorId], references: [consignorId])
  childConsignors           Consignor[]          @relation("parentConsignor")
  branchId                  Int?
  branch                    Branch?              @relation("consignorBranch", fields: [branchId], references: [id])
  wareHouseId               Int?
  wareHouse                 Branch?              @relation("consignorwareHouseId", fields: [wareHouseId], references: [id])
  keyContactName            String?              @db.VarChar(255)
  keyContactDesignation     String?              @db.VarChar(255)
  keyContactAddress         String?              @db.VarChar(255)
  distanceFromBranchKms     Int?
  createdOn                 DateTime?            @default(now())
  modifiedOn                DateTime?            @updatedAt
  consignees                Consignee[]          @relation("consigneeConsignor")
  AWBs                      AirWayBill[]         @relation("AWBConsignor")
  consignorRate             ConsignorRateTable[] @relation("rateTableConsignor")
  odaConsignorIds           ODA[]                @relation("odaConsignorId")
  contractConsignorIds      Contract[]           @relation("contractConsignorId")
  SKUConsignorIds           SKU[]                @relation("SKUConsignorId")
  internalInvocieConsignors InternalInvoice[]    @relation("internalInvocieConsignor")
}

model Consignee {
  consigneeId               Int               @id @default(autoincrement())
  consignorId               Int
  consignor                 Consignor         @relation("consigneeConsignor", fields: [consignorId], references: [consignorId])
  consigneeCode             String?           @db.VarChar(255)
  consigneeName             String            @db.VarChar(255)
  phone1                    String?           @db.VarChar(255)
  phone2                    String?           @db.VarChar(255)
  email                     String?           @db.VarChar(255)
  address1                  String?           @db.VarChar(255)
  address2                  String?           @db.VarChar(255)
  cityId                    Int?
  city                      CityMaster?       @relation("consigneeCity", fields: [cityId], references: [id])
  districtId                Int?
  district                  DistrictMaster?   @relation("consigneeDistrict", fields: [districtId], references: [id])
  stateId                   Int?
  state                     StateMaster?      @relation("consigneeState", fields: [stateId], references: [id])
  branchId                  Int?
  branch                    Branch?           @relation("consigneeBranch", fields: [branchId], references: [id])
  distanceToBranchKms       Int?
  odaType                   String?           @db.VarChar(255)
  tatNumber                 Int?
  PINCodeId                 Int?
  createdOn                 DateTime?         @default(now())
  modifiedOn                DateTime?         @updatedAt
  AWBs                      AirWayBill[]      @relation("AWBConsignee")
  internalInvocieConsignees InternalInvoice[] @relation("internalInvocieConsignee")
}

enum AWBStatus {
  PickUp
  InTransit
  atHub
  outForDelivery
  Delivered
  Deleted
}

model AirWayBill {
  id             Int        @id @default(autoincrement())
  AWBCode        String     @db.VarChar(255)
  consignorId    Int
  consignor      Consignor  @relation("AWBConsignor", fields: [consignorId], references: [consignorId])
  consigneeId    Int?
  consignee      Consignee? @relation("AWBConsignee", fields: [consigneeId], references: [consigneeId])
  fromBranchId   Int
  toBranchId     Int
  fromBranch     Branch     @relation("AWBFromBranch", fields: [fromBranchId], references: [id])
  toBranch       Branch     @relation("AWBToBranch", fields: [toBranchId], references: [id])
  numOfArticles  Int
  invoiceNumber  String?    @db.VarChar(255)
  invoiceValue   Float?     @db.Float
  ewayBillNumber String?    @db.VarChar(255)
  ratePerKg        Float? @db.Float
  rollupVolume     Float? @db.Float
  rollupWeight     Float? @db.Float
  rollupChargedWeight Float? @db.Float
  rollupArticleCnt Int?
  AWBStatus             AWBStatus         @default(PickUp)
  articleGenFlag        Boolean           @default(false)
  contractTypeId        Int?
  contract              Contract?         @relation("AWBContractType", fields: [contractTypeId], references: [id])
  appointmentDate       DateTime?
  AWBPdf                Int?
  FileUpload            FileUpload?       @relation("AWBFileAirWayBill", fields: [AWBPdf], references: [id])
  completeFlag          Boolean           @default(false)
  rollupShortCount      Int?              @default(0)
  rollupExcessCount     Int?              @default(0)
  rollupDamageCount     Int?              @default(0)
  rollupPilferageCount  Int?              @default(0)
  rollupDepsCount       Int?
  createdOn             DateTime?         @default(now())
  modifiedOn            DateTime?         @updatedAt
  AWBLineItems          AwbLineItem[]
  AWBArticles           AwbArticle[]
  AWBIdTripLineItems    TripLineItem[]    @relation("AWBIdTripLineItem")
  hlfLineAWBIds         HLFLineItem[]     @relation("hlfLineAWBId")
  depsAWBIds            DEPS[]            @relation("depsAWBId")
  internalInvocieAWBs   InternalInvoice[] @relation("internalInvocieAWB")
  AWBWeight             Float?            @db.Float
  AWBCDM                Float?            @db.Float
  AWBChargedWeight      Float?            @db.Float
  AWBChargedWeightWithCeiling Float? @db.Float
}

model AwbLineItem {
  id                     Int                        @id @default(autoincrement())
  AWBId                  Int
  AWB                    AirWayBill                 @relation(fields: [AWBId], references: [id])
  lineItemDescription    String?                    @db.VarChar(255)
  numOfArticles          Int
  articleWeight          Float?                     @db.Float
  AWBLineItemweight      Float?                     @db.Float
  AWBLineItemChargedWeight Float?                   @db.Float
  actualFactorWeight     Float?                     @db.Float
  volumetricFactorWeight Float?                     @db.Float
  lengthCms              Float?                     @db.Float
  breadthCms             Float?                     @db.Float
  heightCms              Float?                     @db.Float
  volume                 Float?                     @db.Float
  SKUId                  Int?
  SKUCode                String?
  boxType                String?
  ratePerBox             Float?                     @db.Float
  createdOn              DateTime?                  @default(now())
  modifiedOn             DateTime?                  @updatedAt
  internalInvocieLIAWBs  InternalInvoiceLineItems[] @relation("internalInvocieLIAWB")
}

enum ArticleStatus {
  Created
  Printed
  Deleted
}

model AwbArticle {
  id             Int                  @id @default(autoincrement())
  AWBId          Int
  AWB            AirWayBill           @relation(fields: [AWBId], references: [id])
  articleCode    String               @db.VarChar(255)
  articleIndex   Int
  status         ArticleStatus        @default(Created)
  createdOn      DateTime?            @default(now())
  modifiedOn     DateTime?            @updatedAt
  AWBArtIds      AwbArticleTripLogs[] @relation("AWBArtId")
  depsArticleIds DEPS[]               @relation("depsArticleId")
}

enum RateConsignorStatus {
  Approved
  PendingApproval
}

enum BoxType {
  Mattress
  Pillow
  Box
}

model ConsignorRateTable {
  id                  Int                 @id @default(autoincrement())
  consignorId         Int?
  consignor           Consignor?          @relation("rateTableConsignor", fields: [consignorId], references: [consignorId])
  branchId            Int?
  branch              Branch?             @relation("consignorRateBranch", fields: [branchId], references: [id])
  ratePerKg           Float?
  ratePerBox          Float?
  chargedWeightLower  Float?              @db.Float
  chargedWeightHigher Float?              @db.Float
  boxType             String?
  status              RateConsignorStatus @default(PendingApproval)
  createdOn           DateTime?           @default(now())
  modifiedOn          DateTime?           @updatedAt
}

enum TripStatus {
  Open
  CompletedWithRemarks
  Closed
}

model TripDetails {
  id                    Int                  @id @default(autoincrement())
  tripCode              String               @unique @db.VarChar(255)
  tripStatus            TripStatus           @default(Open)
  latestCheckinType     tripCheckinType?
  latestCheckinHubId    Int?
  checkinBranch         Branch?              @relation("tripLatestCheckinHub", fields: [latestCheckinHubId], references: [id])
  latestCheckinTime     DateTime?
  route                 String?              @db.VarChar(255)
  costPerKg             String?              @db.VarChar(255)
  localTripNumber       String?              @db.VarChar(255)
  vendorId              Int
  vendor                VendorMaster         @relation("tripVendorCode", fields: [vendorId], references: [id])
  vehicleId             Int
  vehicle               VehicleMaster        @relation("tripVehicleId", fields: [vehicleId], references: [id])
  driverId              Int
  driver                DriverMaster         @relation("tripDriverId", fields: [driverId], references: [id])
  FTLLocalNumber        String?              @db.VarChar(255)
  originBranchId        Int?
  originBranch          Branch?              @relation("tripBranchId", fields: [originBranchId], references: [id])
  numberOfAwb           Int?
  numberOfArticles      Int?
  chargedWeight         Float?               @db.Float
  hireAmount            Float?               @db.Float
  advanceAmount         Float?               @db.Float
  TDSAmount             Float?               @db.Float
  balance               Float?               @db.Float
  openingKms            Float?               @db.Float
  closingKms            Float?               @db.Float
  totalKms              Float?               @db.Float
  tripClosingTime       DateTime?
  documentStatus        String?              @db.VarChar(255)
  invoiceStatus         String?              @db.VarChar(255)
  remarks               String?              @db.VarChar(255)
  paymentReqDate        DateTime?
  UTRDetails            String?              @db.VarChar(255)
  ePODsCleared          Boolean?
  originalPODsReceived  Boolean?
  createdOn             DateTime?            @default(now())
  modifiedOn            DateTime?            @updatedAt
  tripIdCheckins        TripCheckIn[]        @relation("tripIdCheckin")
  tripIdTripLineItems   TripLineItem[]       @relation("tripIdTripLineItem")
  depsTripRoutes        DEPS[]               @relation("depsTripRoute")
  AWBArticleLogsTripIds AwbArticleTripLogs[] @relation("AWBArticleLogsTripId")
}

enum tripCheckinType {
  Inwarded
  Outwarded
}

model TripCheckIn {
  id               Int             @id @default(autoincrement())
  tripId           Int
  trip             TripDetails     @relation("tripIdCheckin", fields: [tripId], references: [id])
  type             tripCheckinType @default(Inwarded)
  locationBranchId Int?
  branch           Branch?         @relation("tripCheckinBranchId", fields: [locationBranchId], references: [id])
  odometerReading  Int
  odometerImgId    Int?
  FileUpload       FileUpload?     @relation("odometerImageTripCheckInRecord", fields: [odometerImgId], references: [id])
  time             String          @map("time")
  createdOn        DateTime?       @default(now())
  modifiedOn       DateTime?       @updatedAt
}

enum TripLineItemStatus {
  Assigned
  Open
  Closed
  Delivered
}

model TripLineItem {
  id                       Int                  @id @default(autoincrement())
  AWBId                    Int
  AirWayBill               AirWayBill           @relation("AWBIdTripLineItem", fields: [AWBId], references: [id])
  tripId                   Int
  trip                     TripDetails          @relation("tripIdTripLineItem", fields: [tripId], references: [id])
  unloadLocationId         Int?
  unloadLocation           Branch?              @relation("nextBranchTripLineItem", fields: [unloadLocationId], references: [id])
  finalDestinationId       Int?
  finalBranch              Branch?              @relation("finalBranchTripLineItem", fields: [finalDestinationId], references: [id])
  status                   TripLineItemStatus   @default(Assigned)
  ePODReceived             Boolean              @default(false)
  loadLocationId           Int?
  loadlocation             Branch?              @relation("loadLocationCode", fields: [loadLocationId], references: [id])
  rollupScanCount          Int?
  rollupDepsCount          Int?
  latestArticleScanTime    DateTime?
  originalPODReceived      Boolean              @default(false)
  createdOn                DateTime?            @default(now())
  modifiedOn               DateTime?            @updatedAt
  AwbArticleTripLogsTLIIds AwbArticleTripLogs[] @relation("AwbArticleTripLogsTLIId")
}

model ODA {
  id                  Int       @id @default(autoincrement())
  consignorId         Int
  consignor           Consignor @relation("odaConsignorId", fields: [consignorId], references: [consignorId])
  kmStartingRange     Int?
  kmEndingRange       Int?
  chargedWeightLower  Float?    @db.Float
  chargedWeightHigher Float?    @db.Float
  ODARatePerKg        Float?    @db.Float
  ODABoxType          String?   @db.VarChar(255)
  ODARatePerBox       Float?    @db.Float
  minimumCharge       Float?    @db.Float
  createdOn           DateTime? @default(now())
  modifiedOn          DateTime? @updatedAt
}

enum HLFLineItemStatus {
  ToBeInwarded
  Inwarded
  Outwarded
}

model HLFLineItem {
  id               Int               @id @default(autoincrement())
  HLFLineItemAWBId Int
  AWB              AirWayBill        @relation("hlfLineAWBId", fields: [HLFLineItemAWBId], references: [id])
  HLFLineStatus    HLFLineItemStatus
  branchId         Int?
  branch           Branch?           @relation("hlfLineBranchId", fields: [branchId], references: [id])
  AWBWeightInKgs   Float?            @db.Float
  AWBVolumeInKgs   Float?            @db.Float
  createdOn        DateTime?         @default(now())
  modifiedOn       DateTime?         @updatedAt
}

enum DEPSTypeList {
  Damage
  Excess
  Pilferage
  Shorts
}

enum DEPSStatus {
  Open
  Closed
}

model DEPS {
  id               Int                 @id @default(autoincrement())
  DEPSType         DEPSTypeList
  AWBId            Int
  AirWayBill       AirWayBill          @relation("depsAWBId", fields: [AWBId], references: [id])
  articleId        Int
  AwbArticle       AwbArticle          @relation("depsArticleId", fields: [articleId], references: [id])
  hubId            Int?
  loadingHubBranch Branch?             @relation("depsLoadingHubId", fields: [hubId], references: [id])
  tripId           Int?
  trip             TripDetails?        @relation("depsTripRoute", fields: [tripId], references: [id])
  userId           Int?
  loadUser         User?               @relation("depsLoadingUserId", fields: [userId], references: [id])
  depsStatus       DEPSStatus?
  scanType         ArticleLogsScanType
  createdOn        DateTime?           @default(now())
  modifiedOn       DateTime?           @updatedAt
  depsImages       DEPSImages[]        @relation("depsImage")
}

model DEPSImages {
  id         Int        @id @default(autoincrement())
  depsId     Int
  DEPS       DEPS       @relation("depsImage", fields: [depsId], references: [id])
  fileId     Int
  FileUpload FileUpload @relation("DEPSFiles", fields: [fileId], references: [id])
  createdOn  DateTime?  @default(now())
}

enum FilesType {
  DEPS
  AWB
  GST
  ShippingLabel
  TripCheckin
  LoadingSheet
  UnloadingSheet
  HireLetter
  POD
}

enum SourceType {
  Local
  S3Bucket
}

model FileUpload {
  id                              Int           @id @default(autoincrement())
  type                            FilesType?
  path                            String        @db.VarChar(255)
  sourceType                      SourceType?
  isDeleted                       Boolean       @default(false)
  uri                             String        @db.VarChar(500)
  expiresOn                       DateTime?
  createdOn                       DateTime?     @default(now())
  modifiedOn                      DateTime?     @updatedAt
  odometerImageTripCheckInRecords TripCheckIn[] @relation("odometerImageTripCheckInRecord")
  AWBFileAirWayBills              AirWayBill[]  @relation("AWBFileAirWayBill")
  DEPSFiles                       DEPSImages[]  @relation("DEPSFiles")
  consignorGstFiles               Consignor[]   @relation("consignorGstFile")
}

enum ContractConsignorType {
  Actual
  Volumetric
  ActualVsVolumnetric
  BoxRate
  SKU
}
enum chargedWeightModelType {
  Actual
  Volumetric
  ActualVsVolumnetric
  SKU
}
enum consignorPricingModelType{
  ChargedWeight
  BoxRate
}

enum ContractType {
  FTL
  PTL
}

enum PTlRateType {
  RatePerKG
  RatePerBox
}

enum chargeType {
  withChargedWeightRange
  withoutChargedWeightRange
}

enum accessList {
  Read
  Write
  None
}

model Contract {
  id                          Int                   @id @default(autoincrement())
  consignorId                 Int
  consignor                   Consignor             @relation("contractConsignorId", fields: [consignorId], references: [consignorId])
 
  ContractType                ContractType?
  consignorPricingModel       consignorPricingModelType
  chargedWeightModel          chargedWeightModelType
  isActive                    Boolean?
  startDate                   DateTime?
  endDate                     DateTime?
  PTlRateType                 PTlRateType?
  monthlyMinCommitVolume      Int?
  minimumAWBValue             Float?                @db.Float
  docketChargeValue           Float?                @db.Float
  fovOfCoustomersInvoiceValue Float?
  liabilityClause             String?
  articleChargeMandatory      Float?                @db.Float
  articleChargeMinAmount      Float?                @db.Float
  articleChargeMaxAmount      Float?                @db.Float
  actualWeightFactor          Float?                @db.Float
  volumetricWeightFactor      Float?                @db.Float
  chargedWeightFactor         Float?                @db.Float
  chargedWeightCeilingFactor  Int?
  ODAChargedWeightRange       Boolean               @default(false)
  baseChargeChargedWeightRange Boolean              @default(false)
  AWBLineItemLBHAccess         accessList           @default(None) 
  AWBLineItemArticleWeightAccess accessList         @default(None)
  AWBCDMAccess                accessList            @default(None)
  AWBWeightAccess             accessList            @default(None)
  AWBChargedWeightAccess      accessList            @default(None)
  createdOn                   DateTime              @default(now())
  modifiedOn                  DateTime?             @updatedAt
  AWBContractTypes            AirWayBill[]          @relation("AWBContractType")
  internalInvocieContracts    InternalInvoice[]     @relation("internalInvocieContract")
}

//  consignorContractType       ContractConsignorType
//  odaChargeType               chargeType?  -- rename to ODA - Charged Weight Range
//  baseChargeType              chargeType?  -- rename to Base Charge - Charged Weight Range
//  cwCeiling                                -- rename to Charged Weight Ceiling Factor


enum ArticleLogsScanType {
  Load
  Unload
  Deleted
}

model AwbArticleTripLogs {
  id             Int                 @id @default(autoincrement())
  AWBArticleId   Int
  AWBArticle     AwbArticle          @relation("AWBArtId", fields: [AWBArticleId], references: [id])
  tripId         Int
  TripDetails    TripDetails         @relation("AWBArticleLogsTripId", fields: [tripId], references: [id])
  tripLineItemId Int?
  TripLineItem   TripLineItem?       @relation("AwbArticleTripLogsTLIId", fields: [tripLineItemId], references: [id])
  scanType       ArticleLogsScanType
  createdOn      DateTime            @default(now())
}

model SKU {
  id            Int        @id @default(autoincrement())
  consignorId   Int?
  consignor     Consignor? @relation("SKUConsignorId", fields: [consignorId], references: [consignorId])
  SKUCode       String     @db.VarChar(255)
  product       String?    @db.VarChar(255)
  packSize      String?    @db.VarChar(255)
  lengthCms     Float?     @db.Float
  widthCms      Float?     @db.Float
  heightCms     Float?     @db.Float
  CDM           Float?     @db.Float
  chargedWeight Float?     @db.Float
  createdOn     DateTime   @default(now())
  modifiedOn    DateTime?  @updatedAt
}

model InternalInvoice {
  id                                Int                        @id @default(autoincrement())
  AWBId                             Int
  AirWayBill                        AirWayBill                 @relation("internalInvocieAWB", fields: [AWBId], references: [id])
  consignorId                       Int
  consignor                         Consignor                  @relation("internalInvocieConsignor", fields: [consignorId], references: [consignorId])
  consigneeId                       Int
  consignee                         Consignee                  @relation("internalInvocieConsignee", fields: [consigneeId], references: [consigneeId])
  contractId                        Int
  contract                          Contract                   @relation("internalInvocieContract", fields: [contractId], references: [id])
  ODACharge                         Float                      @db.Float
  baseCharge                        Float                      @db.Float
  createdOn                         DateTime                   @default(now())
  modifiedOn                        DateTime?                  @updatedAt
  internalInvocieLIInternalInvoices InternalInvoiceLineItems[] @relation("internalInvocieLIInternalInvoice")
}

model InternalInvoiceLineItems {
  id                Int             @id @default(autoincrement())
  internalInvoiceId Int
  internalInvoice   InternalInvoice @relation("internalInvocieLIInternalInvoice", fields: [internalInvoiceId], references: [id])
  AWBLineItemId     Int
  AwbLineItem       AwbLineItem     @relation("internalInvocieLIAWB", fields: [AWBLineItemId], references: [id])
  ODACharge         Float           @db.Float
  baseCharge        Float           @db.Float
  createdOn         DateTime        @default(now())
  modifiedOn        DateTime?       @updatedAt
}

//MASTER TABLES

model IndustryTypeMaster {
  id         Int         @id @default(autoincrement())
  value      String      @unique @db.VarChar(255)
  isActive   Boolean     @default(true)
  createdOn  DateTime    @default(now())
  consignors Consignor[] @relation("consignorIndustryType")
}

model CommodityMaster {
  id         Int         @id @default(autoincrement())
  value      String      @unique @db.VarChar(255)
  isActive   Boolean     @default(true)
  createdOn  DateTime    @default(now())
  consignors Consignor[] @relation("ConsignoreCommodity")
}

model PincodesMaster {
  id        Int      @id @default(autoincrement())
  value     Int      @unique
  isActive  Boolean  @default(true)
  createdOn DateTime @default(now())
}

model CityMaster {
  id           Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(255)
  isActive     Boolean        @default(true)
  createdOn    DateTime       @default(now())
  users        User[]         @relation("userCity")
  branches     Branch[]       @relation("branchCity")
  consignors   Consignor[]    @relation("consignorCity")
  consignees   Consignee[]    @relation("consigneeCity")
  vendorCities VendorMaster[] @relation("vendorCity")
  driverCities DriverMaster[] @relation("driverCity")
}

model DistrictMaster {
  id              Int            @id @default(autoincrement())
  name            String         @unique @db.VarChar(255)
  isActive        Boolean        @default(true)
  createdOn       DateTime       @default(now())
  users           User[]         @relation("userDistrict")
  branches        Branch[]       @relation("branchDistrict")
  consignors      Consignor[]    @relation("consignorDistrict")
  consignees      Consignee[]    @relation("consigneeDistrict")
  driverDistricts DriverMaster[] @relation("driverDistrict")
}

model StateMaster {
  id           Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(255)
  isActive     Boolean        @default(true)
  createdOn    DateTime       @default(now())
  users        User[]         @relation("userState")
  branches     Branch[]       @relation("branchState")
  consignors   Consignor[]    @relation("consignorState")
  consignees   Consignee[]    @relation("consigneeState")
  vendorStates VendorMaster[] @relation("vendorState")
  driverStates DriverMaster[] @relation("driverState")
}

model GstMaster {
  id        Int         @id @default(autoincrement())
  name      String      @unique @db.VarChar(255)
  isActive  Boolean     @default(true)
  createdOn DateTime    @default(now())
  gstIds    Consignor[] @relation("ConsignorGstId")
}

model VendorMaster {
  id                Int             @id @default(autoincrement())
  vendorCode        String          @unique @db.VarChar(255)
  publicName        String?         @db.VarChar(255)
  vendorName        String?         @db.VarChar(255)
  address1          String?         @db.VarChar(255)
  cityId            Int?
  city              CityMaster?     @relation("vendorCity", fields: [cityId], references: [id])
  stateId           Int?
  state             StateMaster?    @relation("vendorState", fields: [stateId], references: [id])
  Pincode           String?         @db.VarChar(255)
  GSTNumber         String?         @db.VarChar(255)
  PANNumber         String?         @db.VarChar(255)
  contactPerson     String?         @db.VarChar(255)
  phone1            String?         @db.VarChar(255)
  phone2            String?         @db.VarChar(255)
  email             String?         @db.VarChar(255)
  accountHolderName String?         @db.VarChar(255)
  bankName          String?         @db.VarChar(255)
  branchName        String?         @db.VarChar(255)
  bankAddress       String?         @db.VarChar(255)
  branchPincode     Int?
  accountNumber     Int?
  IFSCCode          String?         @db.VarChar(255)
  TANNumber         String?         @db.VarChar(255)
  servicesOffered   String?         @db.VarChar(255)
  TDSPercentageSlab String?         @db.VarChar(255)
  createdOn         DateTime        @default(now())
  modifiedOn        DateTime?       @updatedAt
  vendorIDs         VehicleMaster[] @relation("vendorID")
  tripVendorCodes   TripDetails[]   @relation("tripVendorCode")
}

model VehicleMaster {
  id                 Int           @id @default(autoincrement())
  vehicleNum         String        @unique @db.VarChar(255)
  vehicleType        String?       @db.VarChar(255)
  vehicleCapacity    String?       @db.VarChar(255)
  vehiclePermit      String?       @db.VarChar(255)
  engineNumber       String?
  chassisNumber      String?
  insuranceValidDate DateTime?
  ownerName          String?
  ownerPANCardNumber String?
  ownerAddress       String?
  createdOn          DateTime      @default(now())
  modifiedOn         DateTime?     @updatedAt
  vendorId           Int?
  vendor             VendorMaster? @relation("vendorID", fields: vendorId, references: [id])
  tripVehicleIds     TripDetails[] @relation("tripVehicleId")
}

model DriverMaster {
  id                Int             @id @default(autoincrement())
  driverName        String          @db.VarChar(255)
  phone1            String?         @db.VarChar(255)
  licenseNumber     String?         @db.VarChar(255)
  licenseExpiryDate DateTime?
  placeOfIssueRTA   String?
  PANNumber         String?         @db.VarChar(255)
  aadharNumber      String?         @db.VarChar(255)
  address1          String?         @db.VarChar(255)
  cityId            Int?
  city              CityMaster?     @relation("driverCity", fields: [cityId], references: [id])
  stateId           Int?
  state             StateMaster?    @relation("driverState", fields: [stateId], references: [id])
  districtId        Int?
  district          DistrictMaster? @relation("driverDistrict", fields: [districtId], references: [id])
  Pincode           Int?
  phone2            Int?
  createdOn         DateTime?       @default(now())
  modifiedOn        DateTime?       @updatedAt
  tripDriverIds     TripDetails[]   @relation("tripDriverId")
}

//View Tables

view ViewHubLoadFactor {
  id               Int       @id @unique
  nscsAwb          String
  numOfArticles    Int?
  actualWeight     Float?
  CDM              Float?
  chargedWeight    Float?
  currentHub       String?
  finalDestination String?
  status           String?
  inwardedDate     DateTime?
  awbDate          DateTime?
  depsCount        Int?
}
